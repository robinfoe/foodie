version: '2'
services:

  db:
    image: docker.io/postgres:13
    restart: always
    environment:
      POSTGRES_USER: foodie
      POSTGRES_PASSWORD: foodie
      POSTGRES_DB: foodie
    ports: 
      - '5432:5432'
    volumes:
      - ./01-initdb.sql:/docker-entrypoint-initdb.d/01-initdb.sql 

## Single kafka instance setup
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:3-debian-10'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    ports:
      - '9092:9092'
      - '9093:9093'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9093,EXTERNAL://kafka:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

## Food Services 
  consumer:
    image: foodie-consumer:1.0
    ports:
      - '8180:8080'
    depends_on:
      - db

  restaurant:
    image: foodie-restaurant:1.0
    ports:
      - '8181:8080'
    depends_on:
      - db

  order:
    image: foodie-order:1.0
    ports:
      - '8182:8080'
    depends_on:
      - db
      - kafka

  kitchen:
    image: foodie-kitchen:1.0
    ports:
      - '8183:8080'
    depends_on:
      - db
      - kafka

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local